apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: redis-pubsub
  labels:
    app: redis
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      component: database
  template:
    metadata:
      labels:
        app: redis
        component: database
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis-port
        env:
        - name: REDIS_MAX_MEMORY
          valueFrom:
            configMapKeyRef:
              name: redis-pubsub-config
              key: REDIS_MAX_MEMORY
        - name: REDIS_MAX_MEMORY_POLICY
          valueFrom:
            configMapKeyRef:
              name: redis-pubsub-config
              key: REDIS_MAX_MEMORY_POLICY
        command: ["redis-server"]
        args: 
        - "--maxmemory"
        - "$(REDIS_MAX_MEMORY)"
        - "--maxmemory-policy" 
        - "$(REDIS_MAX_MEMORY_POLICY)"
        - "--appendonly"
        - "yes"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
      restartPolicy: Always
